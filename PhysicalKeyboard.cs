class PhysicalKeyboard {
    public Key[] physicalKeys = new Key[]{
        new Key("<<",PositionToken.HK0),
        new Key("(1)",PositionToken.HK1),
        new Key("(2)",PositionToken.HK2),
        new Key("(3)",PositionToken.HK3),
        new Key("(4)",PositionToken.HK4),
        new Key("(5)",PositionToken.HK5),
        new Key("(6)",PositionToken.HK6),
        new Key("(7)",PositionToken.HK7),
        new Key("(8)",PositionToken.HK8),
        new Key("FN",PositionToken.HK9),
        new Key("(!)",PositionToken.HK10),
        new Key("Esc",PositionToken.ESCAPE),
        new Key("F1",PositionToken.F1),
        new Key("F2",PositionToken.F2),
        new Key("F3",PositionToken.F3),
        new Key("F4",PositionToken.F4),
        new Key("F5",PositionToken.F5),
        new Key("F6",PositionToken.F6),
        new Key("F7",PositionToken.F7),
        new Key("F8",PositionToken.F8),
        new Key("F9",PositionToken.F9),
        new Key("F10",PositionToken.F10),
        new Key("F11",PositionToken.F11),
        new Key("F12",PositionToken.F12),
        new Key("Print Screen",PositionToken.PRINT),
        new Key("Pause",PositionToken.PAUSE),
        new Key("Delete",PositionToken.DELETE),
        new Key("mute",PositionToken.MUTE),
        new Key("vol-",PositionToken.VOLUMEDOWN),
        new Key("vol+",PositionToken.VOLUMEUP),
        new Key("play",PositionToken.PLAY),
        new Key("prev",PositionToken.PREVIOUS),
        new Key("next",PositionToken.NEXT),
        new Key("ins",PositionToken.INSERT),
        new Key("scrlk",PositionToken.SCROLLLOCK),
        new Key("tilde",PositionToken.TILDE),
        new Key("1",PositionToken.NUMBER1),
        new Key("2",PositionToken.NUMBER2),
        new Key("3",PositionToken.NUMBER3),
        new Key("4",PositionToken.NUMBER4),
        new Key("5",PositionToken.NUMBER5),
        new Key("6",PositionToken.NUMBER6),
        new Key("7",PositionToken.NUMBER7),
        new Key("8",PositionToken.NUMBER8),
        new Key("9",PositionToken.NUMBER9),
        new Key("0",PositionToken.NUMBER0),
        new Key("-",PositionToken.MINUS),
        new Key("=",PositionToken.EQUALS),
        new Key("bspc",PositionToken.BACKSPACE),
        new Key("home",PositionToken.HOME),
        new Key("tab",PositionToken.TAB),
        new Key("Q",PositionToken.Q),
        new Key("W",PositionToken.W),
        new Key("E",PositionToken.E),
        new Key("R",PositionToken.R),
        new Key("T",PositionToken.T),
        new Key("Y",PositionToken.Y),
        new Key("U",PositionToken.U),
        new Key("I",PositionToken.I),
        new Key("O",PositionToken.O),
        new Key("P",PositionToken.P),
        new Key("obrk",PositionToken.OPENBRACKET),
        new Key("cbrk",PositionToken.CLOSEBRACKET),
        new Key("\\",PositionToken.BACKSLASH),
        new Key("end",PositionToken.END),
        new Key("caps",PositionToken.CAPSLOCK),
        new Key("A",PositionToken.A),
        new Key("S",PositionToken.S),
        new Key("D",PositionToken.D),
        new Key("F",PositionToken.F),
        new Key("G",PositionToken.G),
        new Key("H",PositionToken.H),
        new Key("J",PositionToken.J),
        new Key("K",PositionToken.K),
        new Key("L",PositionToken.L),
        new Key("colon",PositionToken.COLON),
        new Key("apos",PositionToken.APOSTROPHE),
        new Key("ent",PositionToken.ENTER),
        new Key("pup",PositionToken.PAGEUP),
        new Key("shft",PositionToken.SHIFT),
        new Key("z",PositionToken.Z),
        new Key("x",PositionToken.X),
        new Key("c",PositionToken.C),
        new Key("v",PositionToken.V),
        new Key("b",PositionToken.B),
        new Key("n",PositionToken.N),
        new Key("m",PositionToken.M),
        new Key("com",PositionToken.COMMA),
        new Key("per",PositionToken.PERIOD),
        new Key("/",PositionToken.FORWARDSLASH),
        new Key("rshft",PositionToken.RIGHTSHIFT),
        new Key("up",PositionToken.UPARROW),
        new Key("pdn",PositionToken.PAGEDOWN),
        new Key("lctrl",PositionToken.LEFTCONTROL),
        new Key("lwin",PositionToken.LEFTWIN),
        new Key("lalt",PositionToken.LEFTALT),
        new Key("lspc",PositionToken.LEFTSPACE),
        new Key("rspc",PositionToken.RIGHTSPACE),
        new Key("ralt",PositionToken.RIGHTALT),
        new Key("rctrl",PositionToken.RIGHTCONTROL),
        new Key("lft",PositionToken.LEFTARROW),
        new Key("dwn",PositionToken.DOWNARROW),
        new Key("rght",PositionToken.RIGHTARROW)
    };
}